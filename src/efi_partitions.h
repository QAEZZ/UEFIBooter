#ifndef EFI_PARTITIONS_H
#define EFI_PARTITIONS_H

#include <efiprot.h>
#include <efidef.h>

// EFI_GUID values - various/misc./NOT all inclusive
#define EFI_DEVICE_PATH_PROTOCOL_GUID \
{0x09576e91,0x6d3f,0x11d2,\
{0x8e,0x39,0x00,0xa0,0xc9,0x69,0x72,0x3b}}

#define EFI_GRAPHICS_OUTPUT_PROTOCOL_GUID \
{0x9042a9de,0x23dc,0x4a38,\
 0x96,0xfb,{0x7a,0xde,0xd0,0x80,0x51,0x6a}}

#define EFI_SIMPLE_POINTER_PROTOCOL_GUID \
{0x31878c87,0xb75,0x11d5,\
0x9a,0x4f,{0x00,0x90,0x27,0x3f,0xc1,0x4d}}

#define EFI_ABSOLUTE_POINTER_PROTOCOL_GUID \
{0x8D59D32B,0xC655,0x4AE9,\
0x9B,0x15,{0xF2, 0x59, 0x04, 0x99, 0x2A, 0x43}}

#define EFI_LOADED_IMAGE_PROTOCOL_GUID \
{0x5B1B31A1,0x9562,0x11d2,\
0x8E,0x3F,{0x00,0xA0,0xC9,0x69,0x72,0x3B}}

#define EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_GUID \
{0x0964e5b22,0x6459,0x11d2,\
0x8e,0x39,{0x00,0xa0,0xc9,0x69,0x72,0x3b}}

#define EFI_FILE_INFO_ID \
{0x09576e92,0x6d3f,0x11d2,\
0x8e,0x39,{0x00,0xa0,0xc9,0x69,0x72,0x3b}}

#define EFI_FILE_SYSTEM_INFO_ID \
{0x09576e93,0x6d3f,0x11d2,\
0x8e,0x39,{0x00,0xa0,0xc9,0x69,0x72, 0x3b}}

#define EFI_BLOCK_IO_PROTOCOL_GUID \
{0x964e5b21,0x6459,0x11d2,\
0x8e,0x39,{0x00,0xa0,0xc9,0x69,0x72,0x3b}}

#define EFI_DISK_IO_PROTOCOL_GUID \
{0xCE345171,0xBA0B,0x11d2,\
0x8e,0x4F,{0x00,0xa0,0xc9,0x69,0x72,0x3b}}

#define EFI_PARTITION_INFO_PROTOCOL_GUID \
{0x8cf2f62c, 0xbc9b, 0x4821,\
0x80, 0x8d, {0xec, 0x9e, 0xc4, 0x21, 0xa1, 0xa0}}

// Partition Type GUID values:
// EFI System Partition GUID
#define ESP_GUID \
{0xC12A7328, 0xF81F, 0x11D2, \
0xBA, 0x4B, {0x00, 0xA0, 0xC9, 0x3E, 0xC9, 0x3B}}

// (Microsoft) Basic Data GUID
#define BASIC_DATA_GUID \
{0xEBD0A0A2, 0xB9E5, 0x4433, \
0x87, 0xC0, {0x68, 0xB6, 0xB7, 0x26, 0x99, 0xC7}}

// EFI_PARTITION_INFO_PROTOCOL: UEFI Spec 2.10 section 13.18
#define EFI_PARTITION_INFO_PROTOCOL_REVISION 0x0001000
#define PARTITION_TYPE_OTHER                 0x00
#define PARTITION_TYPE_MBR                   0x01
#define PARTITION_TYPE_GPT                   0x02

// GPT Partition Entry: UEFI Spec 2.10 section 5.3.3
typedef struct {
    EFI_GUID PartitionTypeGUID;
    EFI_GUID UniquePartitionGUID;
    EFI_LBA  StartingLBA;
    EFI_LBA  EndingLBA;
    UINT64   Attributes;
    CHAR16   PartitionName[36];
} __attribute__ ((packed)) EFI_PARTITION_ENTRY;

typedef struct {
    UINT32 Revision;
    UINT32 Type;
    UINT8 System;
    UINT8 Reserved[7];
    union {
        // MBR data
        MBR_PARTITION_RECORD Mbr;

        // GPT data
        EFI_PARTITION_ENTRY Gpt;
    } Info;
} __attribute__ ((packed)) EFI_PARTITION_INFO_PROTOCOL;




#endif // EFI_PARTITIONS_H